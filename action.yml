name: "Deploy API"
description: "Deploys to Adapt"
author: "Adapt"
inputs:
  application-name:
    description: "Name of the application to deploy, must match the name of the buildpack"
    required: true
  aws-region:
    description: "AWS region for k8 cluster"
    required: false
    default: "eu-west-1"
  buildpack-bucket:
    description: "Name of the S3 bucket where buildpacks are stored"
    required: false
    default: "a-dapt-deployment-artefacts"
  cluster-name:
    description: "Name of the EKS cluster to deploy application"
    required: false
    default: "production"
  role-to-assume:
    description: "Role to assume to get access to AWS resources"
    required: true
runs:
  using: "composite"
  steps:
    - name: Configure AWS OIDC credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        aws-region: ${{ inputs.aws-region }}
        role-session-name: DeployK8CD

    - name: Download a-dapt buildpacks
      shell: bash
      run: |
        aws s3 cp s3://$ARTEFACT_BUCKET/buildpacks/$APPLICATION . --recursive
      env:
        ARTEFACT_BUCKET: ${{ inputs.buildpack-bucket }}
        APPLICATION: ${{ inputs.application-name }}

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3.2.0

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2.0.1

    - name: Build, tag, and push image to Amazon ECR
      shell: bash
      run: |
        # Use Build kit
        export DOCKER_BUILDKIT=1

        # Build image
        docker buildx build --push \
          --platform linux/amd64 \
          --file Dockerfile \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.application-name }}
        IMAGE_TAG: "latest"

    - name: Deploy to EKS
      shell: bash
      run: |
        aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

        helm upgrade --install  \
          $APPLICATION -n $APPLICATION \
          --create-namespace .chart/
      env:
        AWS_REGION: ${{ inputs.aws-region }}
        CLUSTER_NAME: ${{ inputs.cluster-name }}
        APPLICATION: ${{ inputs.application-name }}
